# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Final_project.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from FP_Window2 import Ui_secondWindow
import sqlite3

data_connect=sqlite3.connect("Final_project.db")
data_cursor=data_connect.cursor()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 20, 781, 51))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.batsman_count = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.batsman_count.setFont(font)
        self.batsman_count.setObjectName("batsman_count")
        self.horizontalLayout.addWidget(self.batsman_count)
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.bowler_count = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.bowler_count.setFont(font)
        self.bowler_count.setObjectName("bowler_count")
        self.horizontalLayout.addWidget(self.bowler_count)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.allrounder_count = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.allrounder_count.setFont(font)
        self.allrounder_count.setObjectName("allrounder_count")
        self.horizontalLayout.addWidget(self.allrounder_count)
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout.addWidget(self.label_4)
        self.wicketkeeper_count = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.wicketkeeper_count.setFont(font)
        self.wicketkeeper_count.setObjectName("wicketkeeper_count")
        self.horizontalLayout.addWidget(self.wicketkeeper_count)
        self.list1 = QtWidgets.QListWidget(self.centralwidget)
        self.list1.setGeometry(QtCore.QRect(40, 160, 281, 361))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.list1.setFont(font)
        self.list1.setObjectName("list1")
        #my lines
        self.list1.itemDoubleClicked.connect(self.removelist1)
        self.list1.itemDoubleClicked.connect(lambda:self.update_count(self.batsman_count,self.bat_btn))
        #self.list1.itemDoubleClicked.connect(lambda:self.update_count(self.batsman_count))
        self.list1.itemDoubleClicked.connect(lambda:self.update_count(self.bowler_count,self.bowl_btn))
        self.list1.itemDoubleClicked.connect(lambda:self.update_count(self.allrounder_count,self.allrounder_btn))
        self.list1.itemDoubleClicked.connect(lambda:self.update_count(self.wicketkeeper_count,self.wicketkeeper_btn))
        
        self.list2 = QtWidgets.QListWidget(self.centralwidget)
        self.list2.setGeometry(QtCore.QRect(490, 160, 281, 361))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.list2.setFont(font)
        self.list2.setObjectName("list2")
        #my line
        self.list2.itemDoubleClicked.connect(self.removelist2)
        
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(40, 120, 281, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.bat_btn = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.bat_btn.setFont(font)
        self.bat_btn.setObjectName("bat_btn")
        #my line
        self.bat_btn.clicked.connect(self.update_lists)
        
        self.horizontalLayout_2.addWidget(self.bat_btn)
        self.bowl_btn = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.bowl_btn.setFont(font)
        self.bowl_btn.setObjectName("bowl_btn")
        #my line
        self.bowl_btn.clicked.connect(self.update_lists)
        
        self.horizontalLayout_2.addWidget(self.bowl_btn)
        self.allrounder_btn = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.allrounder_btn.setFont(font)
        self.allrounder_btn.setObjectName("allrounder_btn")
        #my line
        self.allrounder_btn.clicked.connect(self.update_lists)
        
        self.horizontalLayout_2.addWidget(self.allrounder_btn)
        self.wicketkeeper_btn = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.wicketkeeper_btn.setFont(font)
        self.wicketkeeper_btn.setObjectName("wicketkeeper_btn")
        #my line
        self.wicketkeeper_btn.clicked.connect(self.update_lists)
        
        self.horizontalLayout_2.addWidget(self.wicketkeeper_btn)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(490, 130, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.teamname_line = QtWidgets.QLineEdit(self.centralwidget)
        self.teamname_line.setGeometry(QtCore.QRect(580, 130, 191, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.teamname_line.setFont(font)
        self.teamname_line.setObjectName("teamname_line")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(40, 80, 731, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_5 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_4.addWidget(self.label_5)
        self.total_points = QtWidgets.QLineEdit(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.total_points.setFont(font)
        self.total_points.setObjectName("total_points")
        #my line
        self.total_points.setText("1000")
        
        self.horizontalLayout_4.addWidget(self.total_points)
        spacerItem = QtWidgets.QSpacerItem(78, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.label_6 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_4.addWidget(self.label_6)
        self.used_points = QtWidgets.QLineEdit(self.horizontalLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.used_points.setFont(font)
        self.used_points.setObjectName("used_points")
        #my line
        self.used_points.setText("0")
        
        self.horizontalLayout_4.addWidget(self.used_points)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        #my line
        self.actionNew_Team.triggered.connect(self.clear_all)
        
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        #my line
        self.actionSave_Team.triggered.connect(self.save)
        
        self.actionEvaluate_Team = QtWidgets.QAction(MainWindow)
        self.actionEvaluate_Team.setObjectName("actionEvaluate_Team")
        #my line
        self.actionEvaluate_Team.triggered.connect(self.open_window)
        
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        self.menuManage_Teams.addAction(self.actionSave_Team)
        self.menuManage_Teams.addAction(self.actionEvaluate_Team)
        self.menubar.addAction(self.menuManage_Teams.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Batsman (BAT) "))
        self.label_2.setText(_translate("MainWindow", "Bowler (BOW)"))
        self.label_3.setText(_translate("MainWindow", "All-rounder (AR)"))
        self.label_4.setText(_translate("MainWindow", "Wicket-Keeper (WK)"))
        self.bat_btn.setText(_translate("MainWindow", "BAT"))
        self.bowl_btn.setText(_translate("MainWindow", "BWL"))
        self.allrounder_btn.setText(_translate("MainWindow", "AR"))
        self.wicketkeeper_btn.setText(_translate("MainWindow", "WK"))
        self.label_7.setText(_translate("MainWindow", "Team Name"))
        self.label_5.setText(_translate("MainWindow", "Points Available"))
        self.label_6.setText(_translate("MainWindow", "Points Used"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionEvaluate_Team.setText(_translate("MainWindow", "Evaluate Team"))

    #my lines
    def __init__(self):
        self.player_count=0
        self.wicketkeeper_count=0
        self.list2_count=0
        self.team_points=0
        
    def removelist1(self, item):
        self.player_count+=1
        if self.player_count<=11:
            self.list1.takeItem(self.list1.row(item))
            self.list2.addItem(item.text())
            self.list2_count+=1

        else:
            self.toomany_players()
        self.calculate_points(item.text())
        
    def removelist2(self, item):
        self.list2.takeItem(self.list2.row(item))
        self.list1.addItem(item.text())

    def update_lists(self):
        self.list1.clear()

        if self.bat_btn.isChecked():
            for player in ["Mahendra Singh Dhoni","Virat Kohli", "Yuvraj Singh", "Rohit Sharma","Ajinkya Rahane"]:
                item = QtWidgets.QListWidgetItem(player)
                self.list1.addItem(item)
        elif self.bowl_btn.isChecked():
            for player in ["Axar Patel", "Hardik Pandya", "Ravindra Jadeja","Kedar Jadhav"]:
                item = QtWidgets.QListWidgetItem(player)
                self.list1.addItem(item)
        elif self.allrounder_btn.isChecked():
            for player in ["Shikhar Dhawan", "Bhuvaneshwar Kumar","Ravichandran Ashwin"]:
                item = QtWidgets.QListWidgetItem(player)
                self.list1.addItem(item)
        elif self.wicketkeeper_btn.isChecked():
            for player in ["Jasprit Bumrah", "Umesh Yadav"]:
                item = QtWidgets.QListWidgetItem(player)
                self.list1.addItem(item)

    def update_count(self,line_edit,ctg_btn):
        batsman_count = 0
        bowler_count = 0
        allrounder_count = 0
        wicketkeeper_count = 0        
        for index in range(self.list2.count()):
            item = self.list2.item(index).text()
            data_cursor.execute("SELECT category FROM stats WHERE player=?", (item,))
            category = data_cursor.fetchone()[0]
            if category == "BAT":
                batsman_count += 1
            elif category == "BWL":
                bowler_count += 1
            elif category == "AR":
                allrounder_count += 1
            elif category == "WK":
                wicketkeeper_count += 1        
        self.batsman_count.setText(str(batsman_count))
        self.bowler_count.setText(str(bowler_count))
        self.allrounder_count.setText(str(allrounder_count))
        self.wicketkeeper_count.setText(str(wicketkeeper_count))
        if wicketkeeper_count>1:
            self.toomany_wicketkeeper()
            self.wicketkeeper_count.setText("1")
            
    def clear_all(self):
        self.batsman_count.clear()
        self.bowler_count.clear()
        self.allrounder_count.clear()
        self.wicketkeeper_count.clear()
        self.list1.clear()
        self.list2.clear()
        self.teamname_line.clear()
        self.total_points.setText("1000")
        self.used_points.setText("0")

    def save(self):
        team_name=self.teamname_line.text()
        if not team_name:
            self.no_name()
            return              #return will ensure the rest of lines are not executed if the condition is True
        try:
            data_cursor.execute("INSERT INTO teams (Name) VALUES (?);",(team_name,))
            for i in range(self.list2.count()):
                name=self.list2.item(i).text()
                data_cursor.execute("INSERT INTO teams (Players) VALUES (?);",(name,))
            data_connect.commit()           
            success_msg = QMessageBox()
            success_msg.setWindowTitle("Success")
            success_msg.setText("Team saved successfully!")
            success_msg.setIcon(QMessageBox.Information)
            success_msg.exec_()
            data_connect.rollback()
        except sqlite3.Error as e:
            failure_msg = QMessageBox()
            failure_msg.setWindowTitle("Failure!")
            failure_msg.setText(f"Error in adding the team players! {e}")
            failure_msg.setIcon(QMessageBox.Critical)
            failure_msg.exec_()
            
    def toomany_players(self):
        player_msg=QMessageBox()
        player_msg.setWindowTitle("Too many players")
        player_msg.setText("You cannot select more than 11 players!")
        player_msg.setIcon(QMessageBox.Critical)
        x=player_msg.exec_()

    def toomany_wicketkeeper(self):
        wicketkeeper_msg=QMessageBox()
        wicketkeeper_msg.setWindowTitle("Too many wicketkeepers")
        wicketkeeper_msg.setText("You cannot select more than 1 wicketkeeper!\nRemove one wicketkeeper.")
        wicketkeeper_msg.setIcon(QMessageBox.Critical)
        y=wicketkeeper_msg.exec_()
        
    def no_name(self):
        noname_msg=QMessageBox()
        noname_msg.setWindowTitle("No name")
        noname_msg.setText("Please name your team!")
        noname_msg.setIcon(QMessageBox.Critical)
        n=noname_msg.exec_()
        
    def open_window(self):
        self.window=QtWidgets.QWidget()
        self.ui=Ui_secondWindow()
        self.ui.setupUi(self.window)
        self.window.show()

    def calculate_points(self,name):
        try:
            player_connect=sqlite3.connect("Final_project.db")
            player_cursor=player_connect.cursor()
            player_cursor.execute("SELECT * FROM Players_data WHERE Player = ?;",(name,))
            player_data=player_cursor.fetchone()
            #batsman 
            score=player_data[1]
            faced=player_data[2]
            fours=player_data[3]
            sixes=player_data[4]
            runs=player_data[14]
            century=player_data[15]
            half_century=player_data[16]
            if faced==0:
                strike_rate=0
            else:
                strike_rate=runs/faced

            #bowler
            overs=player_data[5]/6
            given=player_data[7]
            wickets=player_data[8]
            if overs==0:
                economy=0
            else:
                economy=given/overs

            #fielding
            catches=player_data[9]
            stumping=player_data[10]
            run_out=player_data[11]

            #bating points
            batting_points=0
            for i in range (0,score,2):
                batting_points+=1
            for i in range (0,half_century):
                batting_points+=5
            for i in range (0,century):
                batting_points+=10
            if 80<strike_rate<100:
                batting_points+=2
            if strike_rate>100:
                batting_points+=4
            for i in range (0,fours):
                batting_points+=1
            for i in range (0,sixes):
                batting_points+=2

            #bowling points
            bowling_points=0
            for j in range (0,wickets):
                bowling_points+=10
            if 3.5<economy<4.5:
                bowling_points+=4
            if 2<economy<3.5:
                bowling_points+=7
            if economy<2:
                bowling_points+=10
    
            #fielding points
            fielding_points=0
            for k in range (0,catches):
                fielding_points+=10
            for k in range (0,stumping):
                fielding_points+=10
            for k in range (0,run_out):
                fielding_points+=10

            total_points=batting_points+bowling_points+fielding_points
            self.team_points+=total_points
            #updating points used 
            self.used_points.setText(str(self.team_points))

            #updating points left
            points_left=int(self.total_points.text())-total_points
            self.total_points.setText(str(points_left))

            #inserting points into database
            player_cursor.execute("INSERT INTO teams (Value) VALUES (?);",(total_points,))
            player_connect.commit()
            player_connect.close()
        except Exception as e:
            failure_msg = QMessageBox()
            failure_msg.setWindowTitle("Failure!")
            failure_msg.setText(f"Error in calculating the team players' points! {e}")
            failure_msg.setIcon(QMessageBox.Critical)
            failure_msg.exec_()
            

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
